/**
NOT TESTED ON REAL JENKINS ENVIRONMENT. YET! :)
**/

// shenbag in case shared libs are used
#!/usr/bin/env groovy

// main body
pipeline {
  agent any
  stages {
    stage('Checkout') {
      steps {
        // source
        sh "echo 'This will retrieve sourcecode for ecosystem...'"
        checkout scm
      }
    }
    stage('Provision - Contenarize - Build - Deploy') {
      // workflow validation
      timeout(time: 30, unit: 'SECONDS') {
        input {
          message "Should we continue the execution?",
          ok "Yes, we should.",
          submitter "root",
          parameters {
              [booleanParam(defaultValue: true, 
                          description: 'Yes, continue.',name: 'Yes?')]
          }
        }
      }
      steps {
        // aws resources
        sh "echo 'This will prepare ecosystem and build React Frontend for the defined backend...'"
        sh "echo ' [Task 1] Creating resources ...'"
        dir('../.terraformconfig') {
          sh 'which terraform'
          sh 'terraform init && terraform fmt && terraform validate -check-variables=true && terraform plan'
          sh 'terraform apply -refresh=true'
        }
        sh 'sleep 600'
        // aws k8s self-managed cluster
        sh "echo ' [Task 2] Creating ecosystem ...'"
        dir('../.k8sconfig') {
          sh 'which kubectl'
          sh 'kubectl apply --validate=true --dry-run=true --filename=task_2.yaml'
          sh 'kubectl apply -f task_2.yaml'
        }
        sh 'sleep 600'
        // aws k8s self-managed node
        sh "echo ' [Task 3] Creating HA setup ...'"
        dir('../.ansibleconfig') {
          sh 'which ansible'
          sh 'ansible-playbook task_3.yml --check --diff'
          sh 'ansible-playbook task_3.yml'
        }
        sh 'sleep 600'
        // react application
        sh "echo ' [Task 4] Creating applications ...'"
        dir('../.') {
          sh 'which npm'
          sh 'npm run build'
          sh 'npm run deploy'
          sh "echo \"//npm.pkg.github.com/:username=foo\" >> ~/.npmrc"
          sh "echo \"//npm.pkg.github.com/:_password=bar==\" > ~/.npmrc"
          sh "echo \"//npm.pkg.github.com/:email=user@mail.com\" >> ~/.npmrc"
          sh "echo \"//npm.pkg.github.com/:always-auth=true\" >> ~/.npmrc"
          //sh "npm set registry https://npm.pkg.github.com/"
          sh "npm login --registry=https://npm.pkg.github.com/"
          sh "npm version-tag patch"
          sh 'npm publish --dry-run'
          sh 'npm publish'
        }
      }
    } 
  }
}
